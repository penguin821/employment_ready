포인터는 4 또는 8 바이트 고정 크기이다.
포인터 타입이 불일치 할때 늘 해당 메모리 앞,뒤를 침범하여 데이터를 덮어써버리는
일이 없도록 늘 조심해야함

참조랑 포인터는 사실상 동일한 취급임
둘다 주소 접근을 통해 실제 값을 변경 할 수 있음
그러나 참조는 선언과 동시에 초기화 되어야만 하고
포인터와 달리 NULL로 초기화하거나 참조 변경을 할 수 없어서
포인터보다 안전함
그리고 참조는 함수 맴버접근을 -> 아닌 .으로 할 수 있어서 편함

다만 .으로 접근할 수 있다보니 유심히 매개변수가 뭔지 확인을 안하면
복사된건지 참조로 접근한건지 모르고 값변경 해버리는 실수를 범할 수 있어서

그걸 막기 위해 const 자료형& 매개변수명으로 읽기용으로만 쓸 수 있음
그리고 실제로 얘네를 셋트로 정말 많이 쓴다, 좋다

그렇다면 포인터는?
1. const 자료형* 매개변수명
해당 포인터가 가르키는 실제 자료의 데이터값을 변경할 수 없다, 접근할 수 없다
즉, 포인터가 다른 주소를 가르키게 변경할 순 있음

1. 자료형* const 매개변수명
해당 포인터가 가르키는 주솟값을 변경할 수 없다